ggplot(CT) + geom_point(aes(x=Ship.Date.Time, y=Actual.Cycle.Time, color=Part.Number), alpha=0.5) +
geom_smooth(aes(x=Ship.Date.Time, y=Actual.Cycle.Time, color=Part.Number)) +
ggtitle('Cycle Times') + facet_grid(Part.Number ~ . , scales='free') +
theme(panel.grid = element_blank(), plot.title = element_text(hjust=0.5),
strip.text.y = element_text(size=8, angle=0)) +
scale_color_brewer(palette='Set3')
ggplot(CT) + geom_point(aes(x=Ship.Date.Time, y=Actual.Cycle.Time, color=Part.Number), alpha=0.5) +
geom_line(data=weekly_medians, aes(x=Date, y=week_med)) +
ggtitle('Cycle Times') + facet_grid(Part.Number ~ . , scales='free') +
theme(panel.background = element_blank(), plot.title = element_text(hjust=0.5),
strip.text.y = element_text(size=8, angle=0), panel.border = element_rect(color='black', fill=NA)) +
scale_color_brewer(palette='Set3') + expand_limits(y=0)
head(FO_Turns)
head(FO)
head(FO_All)
samp_FO <- FO_All[Part.Number == '5104T70P03']
table(samp_FO$Vendor.Name)
samp_FO <- FO_All[Part.Number == '5104T70P03' & Vendor.Name == 'C & A TOOL ENGINEERING INC']
samp_FO$week_in <- format(samp_FO$Farm.In.Date, '%W')
samp_FO$week_out <- format(samp_FO$Farm.Out.Date, '%W')
samp_FO$Farm.In.Status <- mapvalues(samp_FO$Farm.In.Status, from='', to='STILL OUT')
ggplot(samp_FO[Farm.In.Status %in% c('STILL OUT', 'FARMED IN')]) +
geom_boxplot(aes(x=week_in, y=Days.Out, fill=Farm.In.Status), varwidth = T) +
geom_boxplot(data=samp_FO[Farm.In.Status=='STILL OUT'],aes(x=week_out, y=Days.Out, fill=Farm.In.Status), varwidth = T) +
facet_grid(Farm.In.Status ~. ) + xlab('Year-Week (Fiscal Week)') +
ylab('Actual Cycle Time') + ggtitle(paste0(samp_FO$Vendor.Name[1],' - ', PN)) +
theme(panel.background = element_blank(), legend.position = 'bottom')
ggplot(samp_FO[Farm.In.Status %in% c('FARMED IN')]) +
geom_boxplot(aes(x=week_in, y=Days.Out, fill=Farm.In.Status), varwidth = T) +
geom_boxplot(data=samp_FO[Farm.In.Status=='STILL OUT'],aes(x=week_out, y=Days.Out, fill=Farm.In.Status), varwidth = T) +
xlab('Year-Week (Fiscal Week)') +
ylab('Actual Cycle Time') + ggtitle(paste0(samp_FO$Vendor.Name[1],' - ', PN)) +
theme(panel.background = element_blank(), legend.position = 'bottom')
ggplot(samp_FO[Farm.In.Status %in% c('FARMED IN')]) +
geom_boxplot(aes(x=week_in, y=Days.Out, fill=Farm.In.Status), varwidth = T) +  xlab('Year-Week (Fiscal Week)') +
ylab('Actual Cycle Time') + ggtitle(paste0(samp_FO$Vendor.Name[1],' - ', PN)) +
theme(panel.background = element_blank(), legend.position = 'bottom')
ggplot(samp_FO[Farm.In.Status %in% c('FARMED IN')]) +
geom_boxplot(aes(x=week_in, y=Days.Out, fill=Farm.In.Status), varwidth = T) +  xlab('Year-Week (Fiscal Week)') +
ylab('Actual Cycle Time') + ggtitle(paste0(samp_FO$Vendor.Name[1],' - ', samp_FO$Part.Number[1])) +
theme(panel.background = element_blank(), legend.position = 'bottom')
samp_FO$week_in
samp_FO$week_in <- as.numeric(format(samp_FO$Farm.In.Date, '%W'))
samp_FO$week_out <- as.numeric(format(samp_FO$Farm.Out.Date, '%W'))
ggplot(samp_FO[Farm.In.Status %in% c('FARMED IN')]) +
geom_boxplot(aes(x=week_in, y=Days.Out, fill=Farm.In.Status), varwidth = T) +  xlab('Year-Week (Fiscal Week)') +
ylab('Actual Cycle Time') + ggtitle(paste0(samp_FO$Vendor.Name[1],' - ', samp_FO$Part.Number[1])) +
theme(panel.background = element_blank(), legend.position = 'bottom')
ggplot(samp_FO[Farm.In.Status %in% c('FARMED IN')]) +
geom_boxplot(aes(x=week_in, y=Days.Out, fill=Farm.In.Status, by=week_in), varwidth = T) +  xlab('Year-Week (Fiscal Week)') +
ylab('Actual Cycle Time') + ggtitle(paste0(samp_FO$Vendor.Name[1],' - ', samp_FO$Part.Number[1])) +
theme(panel.background = element_blank(), legend.position = 'bottom')
ggplot(samp_FO[Farm.In.Status %in% c('FARMED IN')]) +
geom_boxplot(aes(x=as.factor(week_in), y=Days.Out, fill=Farm.In.Status), varwidth = T) +  xlab('Year-Week (Fiscal Week)') +
ylab('Actual Cycle Time') + ggtitle(paste0(samp_FO$Vendor.Name[1],' - ', samp_FO$Part.Number[1])) +
theme(panel.background = element_blank(), legend.position = 'bottom')
ggplot(samp_FO[Farm.In.Status %in% c('FARMED IN')]) +
geom_boxplot(aes(x=as.factor(week_in), y=Days.Out, fill=Farm.In.Status), varwidth = T) +  xlab('Year-Week (Fiscal Week)') +
ylab('Actual Cycle Time') + ggtitle(paste0(samp_FO$Vendor.Name[1],' - ', samp_FO$Part.Number[1])) +
theme(panel.background = element_blank(), legend.position = 'bottom') +
scale_x_discrete(break=35:43)
ggplot(samp_FO[Farm.In.Status %in% c('FARMED IN')]) +
geom_boxplot(aes(x=as.factor(week_in), y=Days.Out, fill=Farm.In.Status), varwidth = T) +  xlab('Year-Week (Fiscal Week)') +
ylab('Actual Cycle Time') + ggtitle(paste0(samp_FO$Vendor.Name[1],' - ', samp_FO$Part.Number[1])) +
theme(panel.background = element_blank(), legend.position = 'bottom') +
scale_x_discrete(breaks=35:43)
ggplot(samp_FO[Farm.In.Status %in% c('FARMED IN')]) +
geom_boxplot(aes(x=as.factor(week_in), y=Days.Out, fill=Farm.In.Status), varwidth = T) +  xlab('Year-Week (Fiscal Week)') +
ylab('Actual Cycle Time') + ggtitle(paste0(samp_FO$Vendor.Name[1],' - ', samp_FO$Part.Number[1])) +
theme(panel.background = element_blank(), legend.position = 'bottom') +
scale_x_discrete(breaks=35:43,labels=35:43)
?geom_boxplot
ggplot(samp_FO[Farm.In.Status %in% c('FARMED IN')]) +
geom_boxplot(aes(x=week_in, y=Days.Out, fill=Farm.In.Status, group=week_in), varwidth = T) +  xlab('Year-Week (Fiscal Week)') +
ylab('Actual Cycle Time') + ggtitle(paste0(samp_FO$Vendor.Name[1],' - ', samp_FO$Part.Number[1])) +
theme(panel.background = element_blank(), legend.position = 'bottom') +
scale_x_discrete(breaks=35:43,labels=35:43)
ggplot(samp_FO[Farm.In.Status %in% c('FARMED IN')]) +
geom_boxplot(aes(x=week_in, y=Days.Out, fill=Farm.In.Status, group=week_in), varwidth = T) +  xlab('Year-Week (Fiscal Week)') +
ylab('Actual Cycle Time') + ggtitle(paste0(samp_FO$Vendor.Name[1],' - ', samp_FO$Part.Number[1])) +
theme(panel.background = element_blank(), legend.position = 'bottom')
ggplot(samp_FO[Farm.In.Status %in% c('FARMED IN')]) +
geom_boxplot(aes(x=week_in, y=Days.Out, fill=Farm.In.Status, group=week_in), varwidth = T) +  xlab('Year-Week (Fiscal Week)') +
ylab('Actual Cycle Time') + ggtitle(paste0(samp_FO$Vendor.Name[1],' - ', samp_FO$Part.Number[1])) +
theme(panel.background = element_blank(), legend.position = 'bottom') +
geom_point(data = samp_FO[Farm.In.Status %in% c('STILL OUT')],
aes(x=week_in, y=30, fill=Farm.In.Status), shape=21)
ggplot(samp_FO[Farm.In.Status %in% c('FARMED IN')]) +
geom_boxplot(aes(x=week_in, y=Days.Out, fill=Farm.In.Status, group=week_in), varwidth = T) +  xlab('Year-Week (Fiscal Week)') +
ylab('Actual Cycle Time') + ggtitle(paste0(samp_FO$Vendor.Name[1],' - ', samp_FO$Part.Number[1])) +
theme(panel.background = element_blank(), legend.position = 'bottom') +
geom_point(data = samp_FO[Farm.In.Status %in% c('STILL OUT')],
aes(x=week_in, y=30, fill=Farm.In.Status), shape=21) +
facet_grid(Farm.In.Status ~.)
samp_FO[Farm.In.Status %in% c('STILL OUT')]
ggplot(samp_FO[Farm.In.Status %in% c('FARMED IN')]) +
geom_boxplot(aes(x=week_in, y=Days.Out, fill=Farm.In.Status, group=week_in), varwidth = T) +  xlab('Year-Week (Fiscal Week)') +
ylab('Actual Cycle Time') + ggtitle(paste0(samp_FO$Vendor.Name[1],' - ', samp_FO$Part.Number[1])) +
theme(panel.background = element_blank(), legend.position = 'bottom') +
geom_point(data = samp_FO[Farm.In.Status %in% c('STILL OUT')],
aes(x=week_out, y=30, fill=Farm.In.Status), shape=21) +
facet_grid(Farm.In.Status ~.)
table(samp_FO[Farm.In.Status %in% c('STILL OUT')]$week_out)
count(samp_FO[Farm.In.Status %in% c('STILL OUT')]$week_out)
out_count <- count(samp_FO[Farm.In.Status %in% c('STILL OUT')]$week_out)
names(out_count) <- c('week_out', 'count')
out_count$Farm.In.Status <- 'STILL OUT'
ggplot(samp_FO[Farm.In.Status %in% c('FARMED IN')]) +
geom_boxplot(aes(x=week_in, y=Days.Out, fill=Farm.In.Status, group=week_in), varwidth = T) +  xlab('Year-Week (Fiscal Week)') +
ylab('Actual Cycle Time') + ggtitle(paste0(samp_FO$Vendor.Name[1],' - ', samp_FO$Part.Number[1])) +
theme(panel.background = element_blank(), legend.position = 'bottom') +
geom_point(data = out_count,
aes(x=week_out, y=30, fill=Farm.In.Status, size=count), shape=21) +
facet_grid(Farm.In.Status ~.)
ggplot(samp_FO[Farm.In.Status %in% c('FARMED IN')]) +
geom_boxplot(aes(x=week_in, y=Days.Out, fill=Farm.In.Status, group=week_in), varwidth = T) +  xlab('Year-Week (Fiscal Week)') +
ylab('Actual Cycle Time') + ggtitle(paste0(samp_FO$Vendor.Name[1],' - ', samp_FO$Part.Number[1])) +
theme(panel.background = element_blank(), legend.position = 'bottom') +
geom_point(data = out_count,
aes(x=week_out, y=30, fill=Farm.In.Status, size=count), shape=21)
samp_FO
ggplot(samp_FO[Farm.In.Status %in% c('FARMED IN')]) +
geom_boxplot(aes(x=week_in, y=Days.Out, fill=Farm.In.Status, group=week_in), varwidth = T) +  xlab('Year-Week (Fiscal Week)') +
ylab('Actual Cycle Time') + ggtitle(paste0(samp_FO$Vendor.Name[1],' - ', samp_FO$Part.Number[1])) +
theme(panel.background = element_blank(), legend.position = 'bottom') +
geom_point(data = out_count,
aes(x=week_out, y=max(samp_FO$Days.Out), fill=Farm.In.Status, size=count), shape=21)
ggplot(samp_FO[Farm.In.Status %in% c('FARMED IN')]) +
geom_boxplot(aes(x=week_in, y=Days.Out, fill=Farm.In.Status, group=week_in), varwidth = T) +  xlab('Year-Week (Fiscal Week)') +
ylab('Actual Cycle Time') + ggtitle(paste0(samp_FO$Vendor.Name[1],' - ', samp_FO$Part.Number[1])) +
theme(panel.background = element_blank(), legend.position = 'bottom') +
geom_point(data = out_count,
aes(x=week_out, y=max(samp_FO$Days.Out), fill=Farm.In.Status, size=count), shape=21) +
scale_fill_brewer(palette='dark2')
ggplot(samp_FO[Farm.In.Status %in% c('FARMED IN')]) +
geom_boxplot(aes(x=week_in, y=Days.Out, fill=Farm.In.Status, group=week_in), varwidth = T) +  xlab('Year-Week (Fiscal Week)') +
ylab('Actual Cycle Time') + ggtitle(paste0(samp_FO$Vendor.Name[1],' - ', samp_FO$Part.Number[1])) +
theme(panel.background = element_blank(), legend.position = 'bottom') +
geom_point(data = out_count,
aes(x=week_out, y=max(samp_FO$Days.Out), fill=Farm.In.Status, size=count), shape=21) +
scale_fill_brewer(palette='Dark2')
ggplot(samp_FO[Farm.In.Status %in% c('FARMED IN')]) +
geom_boxplot(aes(x=week_in, y=Days.Out, fill=Farm.In.Status, group=week_in), varwidth = T) +  xlab('Year-Week (Fiscal Week)') +
ylab('Actual Cycle Time') + ggtitle(paste0(samp_FO$Vendor.Name[1],' - ', samp_FO$Part.Number[1])) +
theme(panel.background = element_blank(), legend.position = 'bottom', plot.title = element_text(hjust=0.5)) +
geom_point(data = out_count,
aes(x=week_out, y=max(samp_FO$Days.Out), fill=Farm.In.Status, size=count), shape=21) +
scale_fill_brewer(palette='Dark2')
sggsave('Cycle_Time_C&A_Example.jpeg', width=11, height=8, dpi=500)
ggsave('Cycle_Time_C&A_Example.jpeg', width=11, height=8, dpi=500)
ggplot(samp_FO[Farm.In.Status %in% c('FARMED IN')]) +
geom_boxplot(aes(x=week_in, y=Days.Out, fill=Farm.In.Status, group=week_in), varwidth = T) +  xlab('Year-Week (Fiscal Week)') +
ylab('Actual Cycle Time', size=15) + ggtitle(paste0(samp_FO$Vendor.Name[1],' - ', samp_FO$Part.Number[1])) +
theme(panel.background = element_blank(), legend.position = 'bottom', plot.title = element_text(hjust=0.5)) +
geom_point(data = out_count,
aes(x=week_out, y=max(samp_FO$Days.Out), fill=Farm.In.Status, size=count), shape=21) +
scale_fill_brewer(palette='Dark2')
?ylab
ggplot(samp_FO[Farm.In.Status %in% c('FARMED IN')]) +
geom_boxplot(aes(x=week_in, y=Days.Out, fill=Farm.In.Status, group=week_in), varwidth = T) +  xlab('Year-Week (Fiscal Week)') +
ylab('Actual Cycle Time') + ggtitle(paste0(samp_FO$Vendor.Name[1],' - ', samp_FO$Part.Number[1])) +
theme(panel.background = element_blank(), legend.position = 'bottom',
plot.title = element_text(hjust=0.5), axis.text=element_text(size=15)) +
geom_point(data = out_count,
aes(x=week_out, y=max(samp_FO$Days.Out), fill=Farm.In.Status, size=count), shape=21) +
scale_fill_brewer(palette='Dark2')
ggsave('Cycle_Time_C&A_Example.jpeg', width=11, height=8, dpi=500)
ggplot(samp_FO[Farm.In.Status %in% c('FARMED IN')]) +
geom_boxplot(aes(x=week_in, y=Days.Out, fill=Farm.In.Status, group=week_in), varwidth = T) +  xlab('Year-Week (Fiscal Week)') +
ylab('Actual Cycle Time') + ggtitle(paste0(samp_FO$Vendor.Name[1],' - ', samp_FO$Part.Number[1])) +
theme(panel.background = element_blank(), legend.position = 'bottom',
plot.title = element_text(hjust=0.5), axis.text=element_text(size=15)) +
geom_point(data = out_count,
aes(x=week_out, y=max(samp_FO$Days.Out), fill=Farm.In.Status, size=count), shape=21) +
geom_abline(aes(slope=0, intercept=20))
ggplot(samp_FO[Farm.In.Status %in% c('FARMED IN')]) +
geom_boxplot(aes(x=week_in, y=Days.Out, fill=Farm.In.Status, group=week_in), varwidth = T) +  xlab('Year-Week (Fiscal Week)') +
ylab('Actual Cycle Time') + ggtitle(paste0(samp_FO$Vendor.Name[1],' - ', samp_FO$Part.Number[1])) +
theme(panel.background = element_blank(), legend.position = 'bottom',
plot.title = element_text(hjust=0.5), axis.text=element_text(size=15)) +
geom_point(data = out_count,
aes(x=week_out, y=max(samp_FO$Days.Out), fill=Farm.In.Status, size=count), shape=21) +
geom_abline(aes(slope=0, intercept=20)) +
scale_fill_brewer(palette='Dark2')
ggsave('Cycle_Time_C&A_Example.jpeg', width=11, height=8, dpi=500)
ggsave('Cycle_Time_C&A_Example.jpeg', width=12, height=8, dpi=500)
ggplot(samp_FO[Farm.In.Status %in% c('FARMED IN')]) +
geom_boxplot(aes(x=week_in, y=Days.Out, fill=Farm.In.Status, group=week_in), varwidth = T) +  xlab('Year-Week (Fiscal Week)') +
ylab('Actual Cycle Time') + ggtitle(paste0(samp_FO$Vendor.Name[1],' - ', samp_FO$Part.Number[1])) +
theme(panel.background = element_blank(), legend.position = 'bottom',
plot.title = element_text(hjust=0.5), axis.text=element_text(size=15)) +
geom_point(data = out_count,
aes(x=week_out, y=max(samp_FO$Days.Out), fill=Farm.In.Status, size=count), shape=21) +
geom_abline(aes(slope=0, intercept=20), color='red', size=2) +
scale_fill_brewer(palette='Blues')
ggsave('Cycle_Time_C&A_Example.jpeg', width=12, height=8, dpi=500)
ggsave('Cycle_Time_C&A_Example.jpeg', width=13, height=8, dpi=500)
samp_FO
samp_FO$FO.Date <- as.Date(samp_FO$Farm.Out.Date)
table(samp_FO$FO.Date)
table(samp_FO[,c('FO.Date', 'Farm.In.Status', 'Days.Out')])
(samp_FO[, .(n=length(which(Days.Out < 20))), by=c('FO.Date', 'Farm.In.Status')])
setwd('C:/Users/212590921/Documents/Projects/Aviation_SC/Farmout/Inflation')
Leap <- read.csv('LEAP part data.csv')
head(Leap)
Leap <- data.table(Leap)
Leap <- read.csv('LEAP part data.csv')
Leap <- data.table(Leap)
Leap
Leap[, mean.price = mean(PO.Price) , by=c('PO.Number', 'PO.Item', 'Child.Supplier')]
Leap[, .(mean.price = mean(PO.Price)) , by=c('PO.Number', 'PO.Item', 'Child.Supplier')]
Leap[, .(sum.spend = sum(Spend.Amount), mean.price = mean(PO.Price)) ,
by=c('Part.Number', 'Child.Supplier')]
Leap[, .(sum.spend = sum(Spend.Amount), mean.price = mean(PO.Price, na.rm=T)) ,
by=c('Part.Number', 'Child.Supplier')]
Leap[Part.Number == 'P464P02']
Leap_Suppliers <- Leap[, .(sum.spend = sum(Spend.Amount), mean.price = mean(PO.Price, na.rm=T)) ,
by=c('Part.Number', 'Child.Supplier')]
Leap_Suppliers
Leap_Compare <- dcast(Leap_Suppliers, Part.Number ~ Child.Supplier, value.var='sum.spend')
Leap_Compare
Leap_Compare <- dcast(Leap_Suppliers, Part.Number ~ Child.Supplier, value.var='Child.Supplier')
Leap_Compare
?dcast
Leap_Suppliers
Leap_Suppliers$Vendor <- 0
Leap_Suppliers <- Leap_Suppliers[order(Part.Number)]
Leap_Suppliers$ones <- 1
Leap_Suppliers[, Vendor:- cumsum(ones), by=Part.Number]
Leap_Suppliers[Vendor:- cumsum(ones), by=Part.Number]
Leap_Suppliers[, Vendor:= cumsum(ones), by=Part.Number]
Leap_Suppliers
table(Leap_Suppliers$Vendor)
Leap_Suppliers$Vendor <- paste0('Vendor', Leap_Suppliers$Vendor)
Leap_Suppliers
Leap_Compare <- dcast(Leap_Suppliers, Part.Number ~ Vendor, value.var='Child.Supplier')
Leap_Compare
head(Leap)
Leap_Suppliers <- Leap[, .(sum.spend = sum(Spend.Amount), mean.price = mean(PO.Price, na.rm=T),
sum.qty = sum(Total.Qty, na.rm=T)) ,
by=c('Part.Number', 'Child.Supplier')]
Leap_Suppliers$ones <- 1
Leap_Suppliers <- Leap_Suppliers[order(Part.Number)]
Leap_Suppliers[, Vendor:= cumsum(ones), by=Part.Number]
Leap_Suppliers$Vendor <- paste0('Vendor', Leap_Suppliers$Vendor)
Leap_Suppliers
Leap_Parts <- Leap[, .(total.spend=sum(Spend.Amount)), by=Part.Number]
Leap_Suppliers <- merge(Leap_Suppliers, Leap_Parts, by='Part.Number', all.x=T)
Leap_Suppliers
Leap_Compare <- dcast(Leap_Suppliers, Part.Number ~ Vendor, value.var='Child.Supplier', drop=T)
Leap_Compare
Leap_Suppliers$percent.spend <- with(Leap_Suppliers, sum.spend/total.spend)
Leap_Compare <- dcast(Leap_Suppliers, Part.Number ~ Vendor,
value.var=c('Child.Supplier','percent.spend'), drop=T)
Leap_Compare
Leap_Suppliers <- Leap[, .(sum.spend = sum(Spend.Amount), mean.price = mean(PO.Price, na.rm=T),
sum.qty = sum(Total.Qty, na.rm=T)) ,
by=c('Part.Number', 'Child.Supplier')]
Leap_Parts <- Leap[, .(total.spend=sum(Spend.Amount)), by=Part.Number]
Leap_Suppliers <- merge(Leap_Suppliers, Leap_Parts, by='Part.Number', all.x=T)
Leap_Suppliers$ones <- 1
Leap_Suppliers <- Leap_Suppliers[order(Part.Number)]
Leap_Suppliers[, Vendor:= cumsum(ones), by=Part.Number]
Leap_Suppliers$Vendor <- paste0('V', Leap_Suppliers$Vendor)
Leap_Suppliers$percent.spend <- with(Leap_Suppliers, sum.spend/total.spend)
Leap_Compare <- dcast(Leap_Suppliers, Part.Number ~ Vendor,
value.var=c('Child.Supplier','percent.spend'), drop=T)
Leap_Compare
View(Leap_Compare)
Leap_Suppliers
Leap_Parts <- Leap[, .(total.spend=sum(Spend.Amount), total.qty=sum(Total.Qty, na.rm=T)), by=Part.Number]
Leap_Suppliers$per.qty <- with(Leap_Suppliers, sum.qty/total.qty)
Leap_Suppliers <- Leap[, .(sum.spend = sum(Spend.Amount), mean.price = mean(PO.Price, na.rm=T),
sum.qty = sum(Total.Qty, na.rm=T)) ,
by=c('Part.Number', 'Child.Supplier')]
Leap_Parts <- Leap[, .(total.spend=sum(Spend.Amount), total.qty=sum(Total.Qty, na.rm=T)), by=Part.Number]
Leap_Suppliers <- merge(Leap_Suppliers, Leap_Parts, by='Part.Number', all.x=T)
Leap_Suppliers$ones <- 1
Leap_Suppliers <- Leap_Suppliers[order(Part.Number)]
Leap_Suppliers[, Vendor:= cumsum(ones), by=Part.Number]
Leap_Suppliers$Vendor <- paste0('V', Leap_Suppliers$Vendor)
Leap_Suppliers$per.spend <- with(Leap_Suppliers, sum.spend/total.spend)
Leap_Suppliers$per.qty <- with(Leap_Suppliers, sum.qty/total.qty)
Leap_Suppliers
Leap_Compare <- dcast(Leap_Suppliers, Part.Number ~ Vendor,
value.var=c('Child.Supplier','per.spend', 'per.qty', 'mean.price'), drop=T)
Leap_Compare
Leap_2018 <- Leap[Fiscal.Year==2018, .(sum.spend = sum(Spend.Amount), mean.price = mean(PO.Price, na.rm=T),
sum.qty = sum(Total.Qty, na.rm=T)) ,
by=c('Part.Number', 'Child.Supplier')]
Leap_2018 <- Leap[Fiscal.Year==2018, .(price2018 = mean(PO.Price, na.rm=T)) ,
by=c('Part.Number', 'Child.Supplier')]
Leap_Suppliers <- merge(Leap_Suppliers, Leap2018, by='Part.Number', all.x=T)
Leap_2018 <- Leap[Fiscal.Year==2018, .(price2018 = mean(PO.Price, na.rm=T)) ,
by=c('Part.Number', 'Child.Supplier')]
Leap_Suppliers <- merge(Leap_Suppliers, Leap2018, by='Part.Number', all.x=T)
Leap_Parts <- Leap[, .(total.spend=sum(Spend.Amount), total.qty=sum(Total.Qty, na.rm=T)), by=Part.Number]
Leap_Suppliers <- merge(Leap_Suppliers, Leap_Parts, by='Part.Number', all.x=T)
Leap_2018 <- Leap[Fiscal.Year==2018, .(price2018 = mean(PO.Price, na.rm=T)) ,
by=c('Part.Number', 'Child.Supplier')]
Leap_Suppliers <- merge(Leap_Suppliers, Leap2018, by='Part.Number', all.x=T)
Leap_Suppliers$ones <- 1
Leap_Suppliers <- Leap_Suppliers[order(Part.Number)]
Leap_Suppliers[, Vendor:= cumsum(ones), by=Part.Number]
Leap_Suppliers$Vendor <- paste0('V', Leap_Suppliers$Vendor)
Leap_Suppliers$per.spend <- with(Leap_Suppliers, sum.spend/total.spend)
Leap_Suppliers$per.qty <- with(Leap_Suppliers, sum.qty/total.qty)
Leap_Compare <- dcast(Leap_Suppliers, Part.Number ~ Vendor,
value.var=c('Child.Supplier','per.spend', 'per.qty',
'mean.price', 'price2018'), drop=T)
Leap_Compare
names(Leap_Compare)
seq(2:20, by=6)
seq(start=2, end=20, by=6)
Leap_Compare <- dcast(Leap_Suppliers, Part.Number ~ Vendor,
value.var=c('Child.Supplier','per.spend', 'per.qty',
'mean.price', 'price2018'), drop=T)
Leap_Suppliers
Leap_Suppliers <- Leap[, .(sum.spend = sum(Spend.Amount), mean.price = mean(PO.Price, na.rm=T),
sum.qty = sum(Total.Qty, na.rm=T)) ,
by=c('Part.Number', 'Child.Supplier')]
Leap_Parts <- Leap[, .(total.spend=sum(Spend.Amount), total.qty=sum(Total.Qty, na.rm=T)), by=Part.Number]
Leap_Suppliers <- merge(Leap_Suppliers, Leap_Parts, by='Part.Number', all.x=T)
Leap_2018 <- Leap[Fiscal.Year==2018, .(price2018 = mean(PO.Price, na.rm=T)) ,
by=c('Part.Number', 'Child.Supplier')]
Leap_Suppliers <- merge(Leap_Suppliers, Leap2018, by='Part.Number', all.x=T)
Leap_Suppliers$ones <- 1
Leap_Suppliers <- Leap_Suppliers[order(Part.Number)]
Leap_Suppliers[, Vendor:= cumsum(ones), by=Part.Number]
Leap_Suppliers$Vendor <- paste0('V', Leap_Suppliers$Vendor)
Leap_Suppliers$per.spend <- with(Leap_Suppliers, sum.spend/total.spend)
Leap_Suppliers$per.qty <- with(Leap_Suppliers, sum.qty/total.qty)
Leap_Compare <- dcast(Leap_Suppliers, Part.Number ~ Vendor,
value.var=c('Child.Supplier','per.spend', 'per.qty',
'mean.price', 'price2018'), drop=T)
Leap_Compare[, c(1,seq(2:20, by=6))]
Leap_Suppliers
Leap_Suppliers <- merge(Leap_Suppliers, Leap2018, by='Part.Number', all.x=T)
Leap_2018 <- Leap[Fiscal.Year==2018, .(price2018 = mean(PO.Price, na.rm=T)) ,
by=c('Part.Number', 'Child.Supplier')]
Leap_Suppliers <- merge(Leap_Suppliers, Leap_2018, by='Part.Number', all.x=T)
Leap_Compare <- dcast(Leap_Suppliers, Part.Number ~ Vendor,
value.var=c('Child.Supplier','per.spend', 'per.qty',
'mean.price', 'price2018'), drop=T)
Leap_2018
Leap_Suppliers
Leap <- data.table(Leap)
Leap_Suppliers <- Leap[, .(sum.spend = sum(Spend.Amount), mean.price = mean(PO.Price, na.rm=T),
sum.qty = sum(Total.Qty, na.rm=T)) ,
by=c('Part.Number', 'Child.Supplier')]
Leap_Parts <- Leap[, .(total.spend=sum(Spend.Amount), total.qty=sum(Total.Qty, na.rm=T)), by=Part.Number]
Leap_Suppliers <- merge(Leap_Suppliers, Leap_Parts, by='Part.Number', all.x=T)
Leap_2018 <- Leap[Fiscal.Year==2018, .(price2018 = mean(PO.Price, na.rm=T)) ,
by=c('Part.Number', 'Child.Supplier')]
Leap_Suppliers <- merge(Leap_Suppliers, Leap_2018, by=c('Part.Number', 'Child.Supplier'), all.x=T)
Leap_Suppliers$ones <- 1
Leap_Suppliers <- Leap_Suppliers[order(Part.Number)]
Leap_Suppliers[, Vendor:= cumsum(ones), by=Part.Number]
Leap_Suppliers$Vendor <- paste0('V', Leap_Suppliers$Vendor)
Leap_Suppliers$per.spend <- with(Leap_Suppliers, sum.spend/total.spend)
Leap_Suppliers$per.qty <- with(Leap_Suppliers, sum.qty/total.qty)
Leap_Compare <- dcast(Leap_Suppliers, Part.Number ~ Vendor,
value.var=c('Child.Supplier','per.spend', 'per.qty',
'mean.price', 'price2018'), drop=T)
Leap_Compare
?seq
seq(from=2, to=26, by=6)
Leap_Compare[, c(1,grep('V1', names(Leap_Compare)), grep('V2', names(Leap_Compare)))]
Leap_Compare[,c(1,2,8)]
Leap_Compare[, c(1,grep('V1', names(Leap_Compare)), grep('V2', names(Leap_Compare)))]
seq(from=2, to=26, by=6)
grep('V2', names(Leap_Compare))
A <- Leap_Compare[, c(1,grep('V1', names(Leap_Compare)), grep('V2', names(Leap_Compare)))]
Leap_Compare[, grep('V1', names(Leap_Compare)]
Leap_Compare[, grep('V1', names(Leap_Compare))]
Leap_Compare[, c(2, 8, 14, 20, 26)]
column_order <- c(1,grep('V1', names(Leap_Compare)), grep('V2', names(Leap_Compare)),
grep('V3', names(Leap_Compare)), grep('V4', names(Leap_Compare)),
grep('V5', names(Leap_Compare)), grep('V6', names(Leap_Compare)))
A <- Leap_Compare[, column_order]
A <- Leap_Compare[, column_order, with=FALSE]
A
Leap_2018
View(Leap_2018)
View(Leap_Compare)
View(A)
write.csv(A, 'Leap_Transformed_Raw.csv', row.names=F)
A[!is.na(Child.Supplier_V1)]
A[!is.na(Child.Supplier_V2)]
write.csv(A[!is.na(Child.Supplier_V2)], 'Leap_Transformed_Multi.csv', row.names=F)
A[is.na(A)] <- ''
write.csv(A[Child.Supplier_V2==''], 'Leap_Transformed_Multi.csv', row.names=F)
write.csv(A[Child.Supplier_V2!=''], 'Leap_Transformed_Multi.csv', row.names=F)
parts74
write.csv(parts74, 'Operations_74.csv', row.names=F)
ops_consolidated[number_vendors>1]
process_plot <- unique(FO_Turns[Part.Number %in% ops_consolidated[number_vendors>1]$Part.Number[101:145], c('Part.Number', 'Vendor.Name', 'Process')])
process_plot$ones <- 1
process_plot[, VendorCount:=cumsum(ones), by=c('Part.Number')]
process_plot <- process_plot[,-c('ones')]
process_plot.m <- melt(process_plot, id.vars = c('Part.Number', 'Process', 'VendorCount'))
process_plot.m$value <- factor(process_plot.m$value, levels=unique(process_plot.m[order(Process)]$value))
ggplot(process_plot.m) + geom_tile(aes(x=VendorCount, y=Part.Number, fill=Process),
size=1.2, color='black') +
geom_text(aes(x=VendorCount, y=Part.Number, label = value), size=2) +
theme(panel.grid=element_blank(), legend.position = 'bottom') +
scale_fill_brewer(palette='RdYlBu') + ggtitle('FO by Process')
ggplot(process_plot.m) + geom_tile(aes(x=VendorCount, y=Part.Number, fill=Process),
size=1.2, color='black') +
geom_text(aes(x=VendorCount, y=Part.Number, label = value), size=2) +
theme(panel.grid=element_blank(), legend.position = 'bottom') +
scale_fill_brewer(palette='Set3') + ggtitle('FO by Process')
ggplot(process_plot.m) + geom_tile(aes(x=VendorCount, y=Part.Number, fill=Process),
size=1.2, color='grey') +
geom_text(aes(x=VendorCount, y=Part.Number, label = value), size=2) +
theme(panel.grid=element_blank(), legend.position = 'bottom') +
scale_fill_brewer(palette='Set3') + ggtitle('FO by Process')
ggplot(process_plot.m) + geom_tile(aes(x=VendorCount, y=Part.Number, fill=Process)) +
geom_text(aes(x=VendorCount, y=Part.Number, label = value), size=2) +
theme(panel.grid=element_blank(), legend.position = 'bottom') +
scale_fill_brewer(palette='Set3') + ggtitle('FO by Process')
ggplot(process_plot.m) + geom_tile(aes(x=VendorCount, y=Part.Number, fill=Process),
color='black') +
geom_text(aes(x=VendorCount, y=Part.Number, label = value), size=2) +
theme(panel.grid=element_blank(), legend.position = 'bottom') +
scale_fill_brewer(palette='Set3') + ggtitle('FO by Process')
ggsave('Lynn_Process_Consolidation4.jpeg', width=13, height=8, dpi=500)
simp_FO
samp_FO
samp_FO[, .(n=length(which(Days.Out < 20))), by=c('FO.Date', 'Farm.In.Status')]
samp_FO[Farm.In.Status!='F/IN NO WORK', .(n=length(Days.Out), on_time=length(which(Days.Out < 20))),
by=c('FO.Date', 'Farm.In.Status')]
samp_FO[Farm.In.Status!='F/IN NO WORK', .(n=length(Days.Out), on_time=length(which(Days.Out < 20))),
by=c('FO.Date', 'Farm.In.Status')] -> batch_perf
batch_perf$performance_percent <- with(batch_perf, on_time/n)
ggplot(batch_perf) + geom_point(aes(x=FO.Date, y=n, color=on_time)) +
scale_color_gradient('On Time Delivery', label=percent, low='white', high='dark red')
batch_perf
ggplot(batch_perf) + geom_point(aes(x=FO.Date, y=n, color=performance_percent)) +
scale_color_gradient('On Time Delivery', label=percent, low='white', high='dark red')
ggplot(batch_perf) + geom_point(aes(x=FO.Date, y=n, color=performance_percent, size=n)) +
scale_color_gradient('On Time Delivery', label=percent, low='white', high='dark red')
ggplot(batch_perf) + geom_point(aes(x=FO.Date, y=n, color=performance_percent, size=n)) +
scale_color_gradient('On Time Delivery', label=percent, low='blue', high='dark red') +
ggplot(batch_perf) + geom_point(aes(x=FO.Date, y=n, color=performance_percent, size=n)) +
scale_color_gradient('On Time Delivery', label=percent, low='blue', high='dark red') +
theme(panel.background = element_blank())
ggplot(batch_perf) + geom_point(aes(x=FO.Date, y=n, color=performance_percent, size=n)) +
scale_color_gradient('On Time Delivery', label=percent, low='blue', high='dark red') +
theme(panel.background = element_blank())
ggplot(batch_perf) + geom_point(aes(x=FO.Date, y=n, color=performance_percent, size=n)) +
scale_color_gradient('On Time Delivery', label=percent, low='sky blue', high='dark red') +
theme(panel.background = element_blank())
ggplot(batch_perf) + geom_point(aes(x=FO.Date, y=n, color=performance_percent, size=n)) +
scale_color_gradient('On Time Delivery', label=percent, low='sky blue', high='dark red') +
theme(panel.grid = element_blank())
ggplot(batch_perf) + geom_point(aes(x=FO.Date, y=n, color=performance_percent, size=n)) +
scale_color_gradient('On Time Delivery', label=percent, low='sky blue', high='dark red') +
theme(panel.background = element_blank(), panel.border = element_rect(color='black'))
ggplot(batch_perf) + geom_point(aes(x=FO.Date, y=n, color=performance_percent, size=n)) +
scale_color_gradient('On Time Delivery', label=percent, low='sky blue', high='dark red') +
theme(panel.background = element_blank(), panel.border = element_rect(color='black', fill=NULL))
ggplot(batch_perf) + geom_point(aes(x=FO.Date, y=n, color=performance_percent, size=n)) +
scale_color_gradient('On Time Delivery', label=percent, low='sky blue', high='dark red') +
theme(panel.background = element_blank(), panel.border = element_rect(color='black', fill=NA))
ggplot(batch_perf) + geom_point(aes(x=FO.Date, y=n, color=performance_percent, size=n)) +
scale_color_gradient('On Time Delivery', label=percent, low='red', high='blue') +
theme(panel.background = element_blank(), panel.border = element_rect(color='black', fill=NA)) +
scale_size_continuous(guide=F, range=c(0, 6))
ggplot(batch_perf) + geom_point(aes(x=FO.Date, y=n, color=performance_percent, size=n)) +
scale_color_gradient('On Time Delivery', label=percent, low='red', high='blue') +
theme(panel.background = element_blank(), panel.border = element_rect(color='black', fill=NA)) +
scale_size_continuous(guide=F, range=c(0, 6), limits=c(0,6))
ggplot(batch_perf) + geom_point(aes(x=FO.Date, y=n, fill=performance_percent, size=n), shape=21) +
scale_fill_gradient('On Time Delivery', label=percent, low='red', high='blue') +
theme(panel.background = element_blank(), panel.border = element_rect(color='black', fill=NA)) +
scale_size_continuous(guide=F, range=c(0, 6), limits=c(0,6))
ggplot(batch_perf) + geom_point(aes(x=FO.Date, y=n, fill=performance_percent, size=n), shape=21) +
scale_fill_gradient('On Time Delivery \n', label=percent, low='red', high='blue') +
theme(panel.background = element_blank(), panel.border = element_rect(color='black', fill=NA)) +
scale_size_continuous(guide=F, range=c(0, 6), limits=c(0,6))
setwd('C:/Users/212590921/Documents/Projects/Aviation_SC/Farmout/Revised_Turn_times/')
ggplot(batch_perf) + geom_point(aes(x=FO.Date, y=n, fill=performance_percent, size=n), shape=21) +
scale_fill_gradient('On Time Delivery \n', label=percent, low='red', high='blue') +
theme(panel.background = element_blank(), panel.border = element_rect(color='black', fill=NA)) +
scale_size_continuous(guide=F, range=c(0, 6), limits=c(0,6)) + ylab('Batch Size') +
ggtitle('Batch Size analysis')
ggplot(batch_perf) + geom_point(aes(x=FO.Date, y=n, fill=performance_percent, size=n), shape=21) +
scale_fill_gradient('On Time Delivery \n', label=percent, low='red', high='blue') +
theme(panel.background = element_blank(), panel.border = element_rect(color='black', fill=NA),
plot.title = element_text(hjust=0.5)) +
scale_size_continuous(guide=F, range=c(0, 6), limits=c(0,6)) + ylab('Batch Size') +
ggtitle('Batch Size analysis')
setwd('C:/Users/212590921/Documents/Personal_Projects/ICM/')
options(stringsAsFactors = F)
library(plyr)
library(reshape)
library(dplyr)
library(ggplot2)
library(ggrepel)
library(data.table)
library(tidyr)
library(scales)
library(RColorBrewer)
report <- read.csv('ICM Donations Report.csv')
report <- data.table(report)
report <- report[!is.na(report$Amount)]
by_donor <- report[Contact..Contact.ID != '' , .(n=length(Amount), total=sum(Amount)), by=Contact..Contact.ID]
ggplot(by_donor) + geom_col(aes(x=n, y=total))
View(by_donor)
report
report[Contact..Contact.ID=="0039000000HJN2b"]
